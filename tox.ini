[tox]
min_version = 4.0
env_list = 
    py310,py311,py312,py313
    coverage-report
skip_missing_interpreters = true

[testenv]
# Use hatch to manage dependencies and virtual environments
package = wheel
wheel_build_env = .pkg
deps = 
    pytest>=7.0.0
    pytest-asyncio>=0.21.0
    pytest-timeout>=2.1.0
    pytest-cov>=4.0.0
    marimo>=0.8.0
    # Version-specific overrides
    py{310,311,312,313}: pytest>=8.3.0
commands = 
    # Run full test suite with coverage for this Python version
    pytest --cov=src/hunyo_mcp_server --cov=src/capture \
           --cov-append --cov-report= \
           --timeout=30 -v {posargs:test}

[testenv:coverage-report]
# Generate final coverage report after all versions tested
deps = coverage[toml]>=6.0
skip_install = true
commands = 
    coverage combine
    coverage report --show-missing --fail-under=80
    coverage html
    coverage xml



[testenv:py313-latest] 
# Test with latest Python and bleeding edge dependencies
deps = 
    pytest
    pytest-asyncio
    pytest-timeout
    pytest-cov
    marimo
commands = 
    pytest test/ -v --timeout=30

[testenv:compatibility-check]
# Special environment to check version compatibility
deps =
    pytest>=7.0.0
    pytest-asyncio>=0.21.0
    pytest-timeout>=2.1.0
allowlist_externals = python
commands = 
    python -c "import sys; print(f'Python {sys.version}'); assert sys.version_info >= (3, 10)"
    python -c "import pandas, duckdb, pydantic, click, watchdog, websockets; print('âœ… All major dependencies imported successfully')"
    pytest test/test_python_version_compatibility.py -v

[testenv:style]
# Code quality and style checks
deps = 
    black>=23.0.0
    ruff>=0.1.0
    mypy>=1.0.0
    types-click
commands = 
    black --check --diff src/ test/
    ruff check src/ test/
    mypy src/hunyo_mcp_server src/capture

[testenv:docs]
# Documentation testing (placeholder for future)
deps = 
    sphinx
    sphinx-rtd-theme
commands = 
    python -c "print('ðŸ“š Documentation testing placeholder')"

# Configuration for coverage
[coverage:run]
source = src/
branch = true
parallel = true

[coverage:report]
exclude_lines = 
    pragma: no cover
    def __repr__
    if __name__ == .__main__.:
    if TYPE_CHECKING:
show_missing = true
precision = 2

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml 